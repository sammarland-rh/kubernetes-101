apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      deployment.kubernetes.io/revision: "1"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"node-kube-101:latest","namespace":"nwg-demo"},"fieldPath":"spec.template.spec.containers[?(@.name==\"node-kube-101\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2020-11-30T19:11:08Z"
    generation: 1
    labels:
      app: node-kube-101
      app.kubernetes.io/component: node-kube-101
      app.kubernetes.io/instance: node-kube-101
      app.kubernetes.io/part-of: node-kube-101-app
      app.openshift.io/runtime: nodejs
      app.openshift.io/runtime-namespace: nwg-demo
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:alpha.image.policy.openshift.io/resolve-names: {}
            f:image.openshift.io/triggers: {}
            f:openshift.io/generated-by: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/part-of: {}
            f:app.openshift.io/runtime: {}
            f:app.openshift.io/runtime-namespace: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector:
            f:matchLabels:
              .: {}
              f:app: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/generated-by: {}
              f:labels:
                .: {}
                f:app: {}
                f:deploymentconfig: {}
            f:spec:
              f:containers:
                k:{"name":"node-kube-101"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
      manager: Mozilla
      operation: Update
      time: "2020-11-30T19:11:08Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-11-30T19:11:41Z"
    name: node-kube-101
    namespace: nwg-demo
    resourceVersion: "60904"
    selfLink: /apis/apps/v1/namespaces/nwg-demo/deployments/node-kube-101
    uid: fed06ded-36bb-4db6-8977-16ad818feb53
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: node-kube-101
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: node-kube-101
          deploymentconfig: node-kube-101
      spec:
        containers:
        - image: quay.io/sammarland_rh/node-kube-101@sha256:2f8d1a58b8152c11f77c229a249c1c32e8e99518ab4d02fb51eda265ac01596a
          imagePullPolicy: Always
          name: node-kube-101
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2020-11-30T19:11:41Z"
      lastUpdateTime: "2020-11-30T19:11:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-11-30T19:11:08Z"
      lastUpdateTime: "2020-11-30T19:11:41Z"
      message: ReplicaSet "node-kube-101-966dc4c67" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
